Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    package=\"com.reks.androidApp\">\r\n\r\n    <!--\r\n         The ACCESS_COARSE/FINE_LOCATION permissions are not required to use\r\n         Google Maps Android API v2, but you must specify either coarse or fine\r\n         location permissions for the \"MyLocation\" functionality.\r\n    -->\r\n    <uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\" />\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@mipmap/applogo\"\r\n        android:label=\"@string/app_name\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/Theme.AppCompat.DayNight\">\r\n\r\n        <!--\r\n             The API key for Google Maps-based APIs is defined as a string resource.\r\n             (See the file \"res/values/google_maps_api.xml\").\r\n             Note that the API key is linked to the encryption key used to sign the APK.\r\n             You need a different API key for each encryption key, including the release key that is used to\r\n             sign the APK for publishing.\r\n             You can define the keys for the debug and release targets in src/debug/ and src/release/.\r\n        -->\r\n        <meta-data\r\n            android:name=\"com.google.android.geo.API_KEY\"\r\n            android:value=\"@string/google_maps_key\" />\r\n\r\n        <activity\r\n            android:name=\".MapsActivity\"\r\n            android:label=\"@string/title_activity_maps\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n<!--        <activity android:name=\".Splashscreen\">-->\r\n<!--            <intent-filter>-->\r\n<!--                <action android:name=\"android.intent.action.MAIN\" />-->\r\n\r\n<!--                <category android:name=\"android.intent.category.LAUNCHER\" />-->\r\n<!--            </intent-filter>-->\r\n<!--        </activity>-->\r\n        <activity android:name=\".homepage\" />\r\n        <activity android:name=\".login\" />\r\n    </application>\r\n\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/AndroidManifest.xml	(revision 0fcad0c9abf84c0e38725a55e39843731cdd4126)
+++ app/src/main/AndroidManifest.xml	(date 1604864806370)
@@ -1,7 +1,6 @@
 <?xml version="1.0" encoding="utf-8"?>
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
     package="com.reks.androidApp">
-
     <!--
          The ACCESS_COARSE/FINE_LOCATION permissions are not required to use
          Google Maps Android API v2, but you must specify either coarse or fine
@@ -24,28 +23,20 @@
              sign the APK for publishing.
              You can define the keys for the debug and release targets in src/debug/ and src/release/.
         -->
-        <meta-data
-            android:name="com.google.android.geo.API_KEY"
-            android:value="@string/google_maps_key" />
 
-        <activity
-            android:name=".MapsActivity"
-            android:label="@string/title_activity_maps">
+        <meta-data android:name="com.google.android.geo.API_KEY" android:value="@string/google_maps_key" />
+
+        <activity android:name=".MapsActivity" />
+        <activity android:name=".Splashscreen">
             <intent-filter>
                 <action android:name="android.intent.action.MAIN" />
 
                 <category android:name="android.intent.category.LAUNCHER" />
             </intent-filter>
         </activity>
-<!--        <activity android:name=".Splashscreen">-->
-<!--            <intent-filter>-->
-<!--                <action android:name="android.intent.action.MAIN" />-->
-
-<!--                <category android:name="android.intent.category.LAUNCHER" />-->
-<!--            </intent-filter>-->
-<!--        </activity>-->
         <activity android:name=".homepage" />
         <activity android:name=".login" />
+        <activity android:name=".registerpage" android:parentActivityName=".homepage"></activity>
     </application>
 
 </manifest>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_10_31_2020_8_39_PM_[Default_Changelist]/shelved.patch
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_10_31_2020_8_39_PM_[Default_Changelist]/shelved.patch	(revision 0fcad0c9abf84c0e38725a55e39843731cdd4126)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_10_31_2020_8_39_PM_[Default_Changelist]/shelved.patch	(revision 0fcad0c9abf84c0e38725a55e39843731cdd4126)
@@ -1,82 +0,0 @@
-Index: app/src/main/java/com/reks/androidApp/homepage.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.reks.androidApp;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.TextView;\r\n\r\nimport com.google.android.gms.auth.api.signin.GoogleSignIn;\r\nimport com.google.android.gms.auth.api.signin.GoogleSignInAccount;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\n\r\npublic class homepage extends AppCompatActivity {\r\n\r\n    TextView userName, userMail;\r\n    Button logout;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_homepage);\r\n\r\n        logout = findViewById(R.id.logout);\r\n        userName = findViewById(R.id.userName);\r\n        userMail = findViewById(R.id.userMail);\r\n\r\n        GoogleSignInAccount signInAccount = GoogleSignIn.getLastSignedInAccount(this);\r\n        if(signInAccount != null){\r\n            userName.setText(signInAccount.getDisplayName());\r\n            userMail.setText(signInAccount.getEmail());\r\n        }\r\n\r\n        logout.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                FirebaseAuth.getInstance().signOut();\r\n                Intent signOut = new Intent(getApplicationContext(), Splashscreen.class);\r\n                startActivity(signOut);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/reks/androidApp/homepage.java	(revision 782f6df135d2c77ad6e1c5af95c239b60fb0efc6)
-+++ app/src/main/java/com/reks/androidApp/homepage.java	(date 1604176480420)
-@@ -1,13 +1,11 @@
- package com.reks.androidApp;
- 
- import androidx.appcompat.app.AppCompatActivity;
--
- import android.content.Intent;
- import android.os.Bundle;
- import android.view.View;
- import android.widget.Button;
- import android.widget.TextView;
--
- import com.google.android.gms.auth.api.signin.GoogleSignIn;
- import com.google.android.gms.auth.api.signin.GoogleSignInAccount;
- import com.google.firebase.auth.FirebaseAuth;
-Index: app/src/main/java/com/reks/androidApp/Splashscreen.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.reks.androidApp;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport com.google.android.gms.auth.api.signin.GoogleSignInClient;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\n\r\npublic class Splashscreen extends AppCompatActivity {\r\n\r\n    private FirebaseAuth mAuth;\r\n    private FirebaseUser user;\r\n    Handler handler = new Handler();\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_splashscreen);\r\n\r\n        mAuth = FirebaseAuth.getInstance();\r\n        user = mAuth.getCurrentUser();\r\n\r\n\r\n//      If the user is already logged in when you open the app they will be brought directly to the main menu, otherwise they will have to login\r\n        handler.postDelayed(new Runnable() {\r\n            public void run() {\r\n                if(user != null){\r\n                    Intent homepageIntent = new Intent(getApplicationContext(), homepage.class);\r\n                    startActivity(homepageIntent);\r\n                }\r\n                else{\r\n                    Intent loginIntent = new Intent(getApplicationContext(), login.class);\r\n                    startActivity(loginIntent);\r\n                }\r\n            }\r\n        }, 2000);\r\n\r\n\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/reks/androidApp/Splashscreen.java	(revision 782f6df135d2c77ad6e1c5af95c239b60fb0efc6)
-+++ app/src/main/java/com/reks/androidApp/Splashscreen.java	(date 1604176480442)
-@@ -4,7 +4,6 @@
- import android.content.Intent;
- import android.os.Bundle;
- import android.os.Handler;
--import com.google.android.gms.auth.api.signin.GoogleSignInClient;
- import com.google.firebase.auth.FirebaseAuth;
- import com.google.firebase.auth.FirebaseUser;
- 
-Index: app/src/main/java/com/reks/androidApp/login.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.reks.androidApp;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.Toast;\r\n\r\nimport com.google.android.gms.auth.api.signin.GoogleSignIn;\r\nimport com.google.android.gms.auth.api.signin.GoogleSignInAccount;\r\nimport com.google.android.gms.auth.api.signin.GoogleSignInClient;\r\nimport com.google.android.gms.auth.api.signin.GoogleSignInOptions;\r\nimport com.google.android.gms.common.api.ApiException;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.android.material.snackbar.Snackbar;\r\nimport com.google.firebase.auth.AuthCredential;\r\nimport com.google.firebase.auth.AuthResult;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.auth.GoogleAuthProvider;\r\n\r\npublic class login extends AppCompatActivity {\r\n\r\n    private EditText lPasswordInput;\r\n    private EditText lEmailInput;\r\n    Button verify;\r\n\r\n    private GoogleSignInClient mGoogleSignInClient;\r\n    private final static int RC_SIGN_IN = 123;\r\n    private FirebaseAuth mAuth;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_login);\r\n\r\n        lEmailInput = findViewById(R.id.userEmailInput);\r\n        lPasswordInput = findViewById(R.id.userPasswordInput);\r\n        mAuth = FirebaseAuth.getInstance();\r\n\r\n        createRequest();\r\n\r\n        findViewById(R.id.google_signIn).setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                signIn();\r\n            }\r\n        });\r\n    }\r\n\r\n    private void createRequest(){\r\n        GoogleSignInOptions gso = new GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN).requestIdToken(getString(R.string.default_web_client_id)).requestEmail().build();\r\n        mGoogleSignInClient = GoogleSignIn.getClient(this, gso);\r\n    }\r\n\r\n    private void signIn() {\r\n        Intent signInIntent = mGoogleSignInClient.getSignInIntent();\r\n        startActivityForResult(signInIntent, RC_SIGN_IN);\r\n    }\r\n\r\n    @Override\r\n    public void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n\r\n        // Result returned from launching the Intent from GoogleSignInApi.getSignInIntent(...);\r\n        if (requestCode == RC_SIGN_IN) {\r\n            Task<GoogleSignInAccount> task = GoogleSignIn.getSignedInAccountFromIntent(data);\r\n            try {\r\n                // Google Sign In was successful, authenticate with Firebase\r\n                GoogleSignInAccount account = task.getResult(ApiException.class);\r\n                firebaseAuthWithGoogle(account.getIdToken());\r\n            } catch (ApiException e) {\r\n                // Google Sign In failed, update UI appropriately\r\n                // ...\r\n                Toast.makeText(this, e.getMessage(), Toast.LENGTH_SHORT).show();\r\n            }\r\n        }\r\n    }\r\n\r\n    private void firebaseAuthWithGoogle(String idToken) {\r\n\r\n        AuthCredential credential = GoogleAuthProvider.getCredential(idToken, null);\r\n        mAuth.signInWithCredential(credential)\r\n                .addOnCompleteListener(this, new OnCompleteListener<AuthResult>() {\r\n                    @Override\r\n                    public void onComplete(@NonNull Task<AuthResult> task) {\r\n                        if (task.isSuccessful()) {\r\n                            // Sign in success, update UI with the signed-in user's information\r\n                            FirebaseUser user = mAuth.getCurrentUser();\r\n                            Intent homepageIntent = new Intent(getApplicationContext(), homepage.class);\r\n                            startActivity(homepageIntent);\r\n                        } else {\r\n                            // If sign in fails, display a message to the user.\r\n                            Toast.makeText(login.this, \"Authentication Failed\", Toast.LENGTH_SHORT).show();\r\n                        }\r\n\r\n                        // ...\r\n                    }\r\n                });\r\n\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/reks/androidApp/login.java	(revision 782f6df135d2c77ad6e1c5af95c239b60fb0efc6)
-+++ app/src/main/java/com/reks/androidApp/login.java	(date 1604176480430)
-@@ -2,15 +2,12 @@
- 
- import androidx.annotation.NonNull;
- import androidx.appcompat.app.AppCompatActivity;
--
- import android.content.Intent;
- import android.os.Bundle;
--import android.util.Log;
- import android.view.View;
- import android.widget.Button;
- import android.widget.EditText;
- import android.widget.Toast;
--
- import com.google.android.gms.auth.api.signin.GoogleSignIn;
- import com.google.android.gms.auth.api.signin.GoogleSignInAccount;
- import com.google.android.gms.auth.api.signin.GoogleSignInClient;
-@@ -18,7 +15,6 @@
- import com.google.android.gms.common.api.ApiException;
- import com.google.android.gms.tasks.OnCompleteListener;
- import com.google.android.gms.tasks.Task;
--import com.google.android.material.snackbar.Snackbar;
- import com.google.firebase.auth.AuthCredential;
- import com.google.firebase.auth.AuthResult;
- import com.google.firebase.auth.FirebaseAuth;
-@@ -54,7 +50,7 @@
-         });
-     }
- 
--    private void createRequest(){
-+    private void createRequest() {
-         GoogleSignInOptions gso = new GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN).requestIdToken(getString(R.string.default_web_client_id)).requestEmail().build();
-         mGoogleSignInClient = GoogleSignIn.getClient(this, gso);
-     }
Index: .idea/shelf/Uncommitted_changes_before_Update_at_10_31_2020_8_39_PM__Default_Changelist_.xml
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_10_31_2020_8_39_PM__Default_Changelist_.xml	(revision 0fcad0c9abf84c0e38725a55e39843731cdd4126)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_10_31_2020_8_39_PM__Default_Changelist_.xml	(revision 0fcad0c9abf84c0e38725a55e39843731cdd4126)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_10_31_2020_8_39_PM_[Default_Changelist]" date="1604176742195" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_10_31_2020_8_39_PM_[Default_Changelist]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 10/31/2020 8:39 PM [Default Changelist]" />
-</changelist>
\ No newline at end of file
Index: app/src/main/res/layout/activity_registerpage.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_registerpage.xml	(date 1604865932026)
+++ app/src/main/res/layout/activity_registerpage.xml	(date 1604865932026)
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context=".registerpage"/>
\ No newline at end of file
Index: app/src/main/java/com/reks/androidApp/registerpage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/reks/androidApp/registerpage.java	(date 1604864786288)
+++ app/src/main/java/com/reks/androidApp/registerpage.java	(date 1604864786288)
@@ -0,0 +1,16 @@
+package com.reks.androidApp;
+
+import androidx.appcompat.app.AppCompatActivity;
+
+import android.os.Bundle;
+
+public class registerpage extends AppCompatActivity {
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_registerpage);
+    }
+
+
+}
\ No newline at end of file
